plugins {
    id "java-library"
    id "java-test-fixtures"
    id "maven-publish"

    id "me.champeau.jmh"
    id "ru.vyarus.animalsniffer"
}

description = 'gRPC: Util'

tasks.named("jar").configure {
    manifest {
        attributes('Automatic-Module-Name': 'io.grpc.util')
    }
}

dependencies {
    api project(':grpc-api')

    implementation project(':grpc-core'),
            libraries.animalsniffer.annotations,
            libraries.guava
    testImplementation libraries.guava.testlib,
            testFixtures(project(':grpc-api')),
            testFixtures(project(':grpc-core')),
            project(':grpc-testing')

    testFixturesApi project(':grpc-core')
    testFixturesImplementation libraries.guava,
            libraries.junit,
            libraries.mockito.core,
            testFixtures(project(':grpc-api')),
            testFixtures(project(':grpc-core')),
            project(':grpc-testing')
    jmh project(':grpc-testing')

    signature (libraries.signature.java) {
        artifact {
            extension = "signature"
        }
    }
    signature (libraries.signature.android) {
        artifact {
            extension = "signature"
        }
    }
}

animalsniffer {
    // Don't check sourceSets.jmh
    sourceSets = [
        sourceSets.main,
        sourceSets.test
    ]
}

tasks.named("javadoc").configure {
    exclude 'io/grpc/util/MultiChildLoadBalancer.java'
    exclude 'io/grpc/util/OutlierDetectionLoadBalancer*'
    exclude 'io/grpc/util/RoundRobinLoadBalancer*'
}

components.java.withVariantsFromConfiguration(configurations.testFixturesApiElements) { skip() }
components.java.withVariantsFromConfiguration(configurations.testFixturesRuntimeElements) { skip() }
